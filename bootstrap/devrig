#!/bin/sh

set -eu

# Determine script directory
SCRIPT_DIR="$(cd "$(dirname "$0")" && pwd)"

# Configuration
DEVRIG_CONFIG="${DEVRIG_CONFIG:-${SCRIPT_DIR}/devrig.yaml}"
DEVRIG_HOME="${DEVRIG_HOME:-${SCRIPT_DIR}/.devrig}"

# Log configuration overrides
if [ "${DEVRIG_CONFIG}" != "${SCRIPT_DIR}/devrig.yaml" ]; then
    echo "[INFO] Using custom config location: DEVRIG_CONFIG=${DEVRIG_CONFIG}"
fi

if [ "${DEVRIG_HOME}" != "${SCRIPT_DIR}/.devrig" ]; then
    echo "[INFO] Using custom devrig home: DEVRIG_HOME=${DEVRIG_HOME}"
fi

if [ ! -f "$DEVRIG_CONFIG" ]; then
    echo "[ERROR] Configuration file not found: $DEVRIG_CONFIG" >&2
    exit 1
fi

mkdir -p "$DEVRIG_HOME"

if [ "${DEVRIG_OS:-none}" = "none" ]; then
  case "$(uname -s)" in
      Linux*)  DEVRIG_OS="linux";;
      Darwin*) DEVRIG_OS="darwin";;
      *)       echo "[ERROR] Unsupported OS: $(uname -s)" >&2; exit 1;;
  esac
else
  echo "[INFO] Using custom OS: DEVRIG_OS=${DEVRIG_OS}"
fi

if [ "${DEVRIG_CPU:-none}" = "none" ]; then
  case "$(uname -m)" in
      x86_64|amd64)  DEVRIG_CPU="x86_64";;
      arm64|aarch64) DEVRIG_CPU="arm64";;
      *)             echo "[ERROR] Unsupported CPU: $(uname -m)" >&2; exit 1;;
  esac
else
  echo "[INFO] Using custom CPU: DEVRIG_CPU=${DEVRIG_CPU}"
fi

in_devrig=0
in_binaries=0
in_platform=0
url=""
sha512=""

while IFS= read -r line; do
    if [ ! -z "$url" ] && [ ! -z "$sha512" ]; then
        #make sure we are not reading next url or sha from the file
        break
    fi

    case "$line" in
        devrig:*)
            in_devrig=1
            ;;
        *binaries:*)
            if [ $in_devrig -eq 1 ]; then
                in_binaries=1
            fi
            ;;
        *${DEVRIG_OS}-${DEVRIG_CPU}:*)
            if [ $in_binaries -eq 1 ]; then
                in_platform=1
            fi
            ;;
        *url:*)
            if [ $in_platform -eq 1 ] && [ "$url" = "" ]; then
                url=$(echo "$line" | sed 's/.*url:[[:space:]]*["'\'']*\([^"'\'']*\)["'\'']*.*/\1/')
            fi
            ;;
        *sha512:*)
            if [ $in_platform -eq 1 ] && [ "$sha512" = "" ]; then
                sha512=$(echo "$line" | sed 's/.*sha512:[[:space:]]*["'\'']*\([^"'\'']*\)["'\'']*.*/\1/')
            fi
            ;;
    esac
done < "$DEVRIG_CONFIG"

if [ -z "$url" ] || [ -z "$sha512" ]; then
    echo "[ERROR] Could not find devrig binary configuration for platform: ${DEVRIG_OS} ${DEVRIG_CPU}" >&2
    echo "[ERROR] Please check $DEVRIG_CONFIG" >&2
    exit 1
fi

if [ "${DEVRIG_DEBUG_YAML_DOWNLOAD:-no}" = "1" ]; then
  echo "${url}"
  echo "${sha512}"
  exit 44
fi


# Construct binary directory path
DEVRIG_BIN="${DEVRIG_HOME}/devrig-${DEVRIG_OS}-${DEVRIG_CPU}-${sha512}"

if [ "$DEVRIG_OS" = "windows" ]; then
    DEVRIG_BIN="${DEVRIG_BIN}.exe"
fi

check_sha_sum()
{
      temp_binary="$1"

      # Verify downloaded binary hash
      if command -v sha512sum >/dev/null 2>&1; then
          actual_hash=$(sha512sum "$temp_binary" | awk '{print $1}')
      elif command -v check_sha_sum >/dev/null 2>&1; then
          actual_hash=$(check_sha_sum -a 512 "$temp_binary" | awk '{print $1}')
      else
          echo "[ERROR] Neither sha512sum nor shasum found. Cannot verify checksum." >&2
          return 7
      fi

      # Normalize to lowercase
      actual_hash=$(echo "$actual_hash" | tr '[:upper:]' '[:lower:]')
      expected_hash=$(echo "$sha512" | tr '[:upper:]' '[:lower:]')

      if [ "$actual_hash" != "$expected_hash" ]; then
          echo "[ERROR] Downloaded binary checksum mismatch for $temp_binary!" >&2
          echo "[ERROR] Expected: $expected_hash" >&2
          echo "[ERROR] Actual:   $actual_hash" >&2
          return 7
      fi
}

if [ ! -f "${DEVRIG_BIN}" ]; then
      echo "[INFO] Devrig binary not found, downloading..."

      # Create temporary directory for download
      temp_binary="${DEVRIG_BIN}-downloading"

      if command -v curl >/dev/null 2>&1; then
          curl -fSL --retry 2 -o "$temp_binary" "$url"
      elif command -v wget >/dev/null 2>&1; then
          wget --tries=2 --continue -O "$temp_binary" "$url"
      else
          echo "[ERROR] Neither curl nor wget found. Cannot download file." >&2
          exit 1
      fi

      if [ ! -f "$temp_binary" ]; then
          echo "[ERROR] Failed to download devrig binary" >&2
          exit 1
      fi

      echo "[INFO] Verifying downloaded binary checksum..."
      check_sha_sum "$temp_binary"

      # Make binary executable
      chmod +x "$temp_binary"

      # Move to production location
      echo "[INFO] Installing devrig binary..."
      rm -f "$DEVRIG_BIN" || true
      mv "$temp_binary" "$DEVRIG_BIN"

      echo "[INFO] Devrig binary installed successfully"
fi

# make sure we execute the same binary as specified in the config
check_sha_sum "$DEVRIG_BIN"

if [ "${DEVRIG_DEBUG_NO_EXEC:-no}" = "1" ]; then
  echo "${url}"
  echo "${sha512}"
  echo "${DEVRIG_BIN}"
  exit 45
fi

exec "$DEVRIG_BIN" "$@"
