name: Build Release

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  prepare-release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Read version and add build number
        id: version
        run: |
          BASE_VERSION=$(cat cli/VERSION | tr -d '\n')
          BUILD_NUMBER=${{ github.run_number }}
          VERSION="${BASE_VERSION}.${BUILD_NUMBER}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION (Base: $BASE_VERSION, Build: $BUILD_NUMBER)"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.version }}
          release_name: devrig v${{ steps.version.outputs.version }}
          draft: true
          prerelease: true
          body: |
            # devrig v${{ steps.version.outputs.version }}

            ## Installation

            Download the appropriate binary for your platform and architecture.

            ## Supported Platforms

            - Linux (x86_64, ARM64)
            - macOS (ARM64 - Apple Silicon)
            - Windows (x86_64, ARM64)

            ## Checksums

            See `checksums.txt` for SHA-512 hashes of all binaries.

  build-and-release:
    needs: prepare-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build all platforms using build.sh in Docker
        working-directory: ./cli
        env:
          BUILD_NUMBER: ${{ github.run_number }}
        run: |
          chmod +x build.sh build-in-docker-sandbox.sh
          ./build.sh

      - name: Upload Release Assets
        run: |
          # Upload binaries
          for file in cli/build-in-docker/*; do
            echo "Uploading $(basename "$file")..."
            gh release upload "v${{ needs.prepare-release.outputs.version }}" "$file" --clobber
          done

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
